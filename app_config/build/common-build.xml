<project name="common-build" default="package" basedir="." xmlns:ivy="antlib:org.apache.ivy.ant">

	<property name="build.dir" value="target"/>
	<property name="classesDir" value="${build.dir}/classes"/>
	<property name="srcDir" value="src/main/java"/>
	<property name="resourceDir" value="src/main/resources"/>
	<property name="webappsDir" value="src/main/webapp"/>
	<property name="testOutputDir" value="${build.dir}/test-classes"/>
	<property name="testSrcDir" value="src/test/java"/>
	<property name="testResourceDir" value="src/test/resources"/>
	<property name="test.classes.dir" location="${build.dir}/test-classes"/>
	<property name="test.reports.dir"  location="${build.dir}/test-reports"/>
	<property name="externals" location="app_config"/>

	<import file="common-ivy.xml"/>

	<!-- ====================================================================== -->
	<!-- Cleaning up target                                                     -->
	<!-- ====================================================================== -->
	
	<target name="clean" description="Clean the output directory">
		<delete dir="${build.dir}"/>
	</target>
	
	
	<!--
    ===========
    Build setup
    ===========
    -->
	<target name="init" depends="init-ivy">
		<ivy:resolve/>
		<ivy:retrieve/>
		<ivy:report todir='${ivy.reports.dir}' graph='false' xml='false'/>

		<ivy:cachepath pathid="compile.path" conf="compile"/>
		<ivy:cachepath pathid="runtime.path" conf="runtime"/>
		<ivy:cachepath pathid="test.path"    conf="test"/>

		<mkdir dir="${test.classes.dir}"/>
		<mkdir dir="${test.reports.dir}"/>
	</target>

	<!-- ====================================================================== -->
	<!-- Compilation target                                                     -->
	<!-- ====================================================================== -->

	<target name="compile" depends="init" description="Compile the code">
		<mkdir dir="${classesDir}"/>

		<javac destdir="${classesDir}" 
	           nowarn="true" 
	           debug="true" 
	           optimize="false" 
	           deprecation="true" 
	           target="1.7" 
	           verbose="false" 
	           fork="false" 
			   includeantruntime="false" 
	           source="1.7">
			<src>
				<pathelement location="${srcDir}"/>
			</src>
			<classpath refid="compile.path"/>
		</javac>
		<copy todir="${classesDir}">
			<fileset dir="${resourceDir}"/>
		</copy>
	</target>

	<!-- ====================================================================== -->
	<!-- Test-compilation target                                                -->
	<!-- ====================================================================== -->

	<target name="test" 
	          depends="compile" 
	          description="Compile the test code" 
	          unless="maven.test.skip">
		<mkdir dir="${testOutputDir}"/>
		<javac destdir="${testOutputDir}" 
	           nowarn="true" 
	           debug="true" 
	           optimize="false" 
	           deprecation="true" 
			   includeantruntime="false" 
	           target="1.6" 
	           verbose="false" 
	           fork="false" 
	           source="1.6">
			<src>
				<pathelement location="${testSrcDir}"/>
			</src>
			<classpath>
				<path refid="test.path"/>
				<pathelement location="${classesDir}"/>
			</classpath>
		</javac>
		<copy todir="${testOutputDir}">
			<fileset dir="${testResourceDir}"/>
		</copy>
	</target>


	<target name="package" depends="clean,compile,test" description="Package the application">
		<!-- make the exploded target -->
		<mkdir dir="${build.dir}/${build.finalName}"/>

		<!-- copy over the src/main/webapp content -->
		<copy todir="${build.dir}/${build.finalName}" >
			<fileset dir="${webappsDir}"/>
		</copy>

		<!-- Copy over the compiled .class files -->
		<copy todir="${build.dir}/${build.finalName}/WEB-INF/classes">
			<fileset dir="${classesDir}" />
		</copy>

		<!-- Make the WEB-INF/lib -->
		<mkdir dir="${build.dir}/${build.finalName}/WEB-INF/lib"/>
		<ivy:retrieve pattern="${build.dir}/${build.finalName}/WEB-INF/lib/[artifact].[ext]" sync="true"/>


	</target>
	
	<target name="fe-build" depends="compile,test" description="Package the application">
		<!-- make the exploded target -->
		<mkdir dir="${build.dir}/${build.finalName}"/>

		<!-- copy over the src/main/webapp content -->
		<copy todir="${build.dir}/${build.finalName}" >
			<fileset dir="${webappsDir}"/>
		</copy>

		<!-- Copy over the compiled .class files -->
		<copy todir="${build.dir}/${build.finalName}/WEB-INF/classes">
			<fileset dir="${classesDir}" />
		</copy>

		<!-- Make the WEB-INF/lib -->
		<mkdir dir="${build.dir}/${build.finalName}/WEB-INF/lib"/>
		<ivy:retrieve pattern="${build.dir}/${build.finalName}/WEB-INF/lib/[artifact].[ext]" sync="true"/>


	</target>

	<!-- ====================================================================== -->
	<!-- A target for the package named after the type it creates               -->
	<!-- ====================================================================== -->
	<target name="war" depends="package" description="Builds the war for the application">

		<!-- Create the WAR -->
		<war destfile="${build.dir}/${build.finalName}.war" compress="true" webxml="src/main/webapp/WEB-INF/web.xml">
			<lib dir="${build.dir}/${build.finalName}/WEB-INF/lib" excludes="servlet-api.jar" />
			<classes dir="${classesDir}" />
			<fileset dir="src/main/webapp" excludes="WEB-INF/web.xml" />
		</war>
		
	</target>


	<!-- ====================================================================== -->
	<!-- A target for copying over the FE files from the src to the webapp      -->
	<!-- ====================================================================== -->
	<target name="content">
		<copy todir="${build.dir}/${build.finalName}">
			<fileset dir="${webappsDir}">
				<include name="**/*.jsp"/>
				<include name="**/*.js"/>
				<include name="**/*.css"/>
				<include name="**/*.html"/>
				<include name="**/*.png"/>
				<include name="**/*.jpg"/>
			</fileset>
		</copy>
	</target>

	<!-- ====================================================================== -->
	<!-- A target for copying over the FE files from the src to the webapp      -->
	<!-- compiling the sass files first                                         -->
	<!-- ====================================================================== -->
	<target name="content_sass" depends="sass">
		<copy todir="${build.dir}/${build.finalName}">
			<fileset dir="${webappsDir}">
				<include name="**/*.jsp"/>
				<include name="**/*.js"/>
				<include name="**/*.css"/>
				<include name="**/*.html"/>
				<include name="**/*.png"/>
				<include name="**/*.jpg"/>
			</fileset>
		</copy>
	</target>



	<!-- ====================================================================== -->
	<!-- A target for compiles the sass                                         -->
	<!-- ====================================================================== -->
	<target name="sass">
		<path id="jruby.classpath">
			<fileset dir="${externals}/sass">
				<include name="jruby-complete-1.7.11.jar"/>
			</fileset>
		</path>
		<java fork="true" failonerror="true" classpathref="jruby.classpath" classname="org.jruby.Main"> 
			<arg line="${externals}/sass/compile.rb ${basedir} compile ${basedir}"/>   
		</java>
	</target>


</project>
